name: Xray Remote Job Example

on:
    
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string

jobs:
  hello-world-and-report:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Print testExecKey
        id: xray-execKey
        run: echo "testExecKey=${{ github.event.inputs.testExecKey }}" >> $GITHUB_OUTPUT
        # Use github.event.inputs.* for workflow_dispatch.
        # Use github.event.client_payload.* for repository_dispatch.

      - name: Say Hello World
        run: echo "Hello World!"

      - uses: actions/checkout@v2
      - name: Output Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: Get Xray Auth Token
        id: xray-auth
        run: |
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d '{"client_id":"${{ secrets.XRAY_CLIENT_ID }}","client_secret":"${{ secrets.XRAY_CLIENT_SECRET }}"}' \
            https://xray.cloud.getxray.app/api/v2/authenticate | tr -d '"')
          if [ -z "$TOKEN" ]; then
            echo "‚ùå Failed to get Xray token"
            exit 1
          fi
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Generate JUnit XML report
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>
          <testsuites>
            <testsuite name="Test suite" tests="1" failures="0" skipped="0" errors="0" time="1.0">
              <testcase classname="Test" name="TestCase01"/>
            </testsuite>
          </testsuites>' > report.xml

      - name: Debug JUnit XML
        run: |
           echo "Listing and showing JUnit XML file:"
           ls -l report.xml
           cat report.xml

      - name: Import results to Xray Cloud
        run: |
          echo "üöÄ Uploading to Xray Test Execution: ${{ steps.xray-execKey.outputs.testExecKey }}"
          response_file=$(mktemp)
          http_code=$(curl -s -o "$response_file" -w "%{http_code}" -H "Content-Type: multipart/form-data" \
            -H "Authorization: Bearer ${{ steps.xray-auth.outputs.token }}" \
            -F "file=@report.xml" \
            "https://xray.cloud.getxray.app/api/v2/import/execution/junit?testExecKey=${{ steps.xray-execKey.outputs.testExecKey }}")
          if [ "$http_code" -ne 200 ]; then
            echo "‚ùå Failed to upload results to Xray. HTTP status: $http_code"
            echo "Response body:"
            cat "$response_file"
            exit 1
          fi

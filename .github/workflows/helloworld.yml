name: Xray Remote Job Example

on:
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'testExecKey from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project key from Xray'
        default: ''
        required: true
        type: string

jobs:
  hello-world-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Print testExecKey
        run: echo "Test Execution Key:${{ github.event.inputs.testExecKey }}"
        # Use github.event.inputs.* for workflow_dispatch.
        # Use github.event.client_payload.* for repository_dispatch.

      - name: Say Hello World
        run: echo "Hello World!"

      - name: Get Xray Auth Token
        id: xray-auth
        run: |
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d '{"client_id":"${{ secrets.XRAY_CLIENT_ID }}","client_secret":"${{ secrets.XRAY_CLIENT_SECRET }}"}' \
            https://xray.cloud.getxray.app/api/v2/authenticate | tr -d '"')
          if [ -z "$TOKEN" ]; then
            echo "‚ùå Failed to get Xray token"
            exit 1
          fi
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Generate JUnit XML report
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>
          <testsuites>
            <testsuite name="Dummy Test Suite" tests="1" failures="0" skipped="0" errors="0" time="1.0">
              <testcase name="Dummy Test Case" classname="DummyClass"/>
            </testsuite>
          </testsuites>' > junit-report.xml

      - name: Upload results to Xray Cloud
        run: |
          echo "üöÄ Uploading to Xray Test Execution: ${{ github.event.inputs.testExecKey }}"
          response=$(curl -s -w "%{http_code}" -H "Content-Type: multipart/form-data" \
            -H "Authorization: Bearer ${{ steps.xray-auth.outputs.token }}" \
            -F "file=@junit-report.xml" \
            "https://xray.cloud.getxray.app/api/v2/import/execution/junit?testExecKey=${{ github.event.inputs.testExecKey }}")
          http_code=$(echo "$response" | tail -n1)
          if [ "$http_code" -ne 200 ]; then
            echo "‚ùå Failed to upload results to Xray. HTTP status: $http_code"
            exit 1 #for upload failures.
          fi
            
